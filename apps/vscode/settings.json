{
  // Windows
  "window.title": "${dirty} ${activeEditorMedium}${separator}${rootName}",
  "window.zoomLevel": 0,

  // Editor
  "editor.fontFamily": "JetBrains Mono, Fira code, Roboto",
  "editor.fontLigatures": true,
  "editor.fontSize": 17,
  "editor.tabSize": 2,
  "editor.fontWeight": "800",
  "editor.letterSpacing": 0.8,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.formatOnPaste": true,
  "editor.wordWrap": "bounded",
  "editor.mouseWheelZoom": false,
  "editor.minimap.renderCharacters": false,
  "editor.detectIndentation": true,
  "editor.renderWhitespace": "boundary",
  "editor.tabCompletion": "on",
  "editor.lineNumbers": "relative",
  "editor.renderLineHighlight": "all",
  "editor.minimap.enabled": true,
  "editor.selectionHighlight": true,
  "editor.insertSpaces": false,

  // File
  "files.autoSaveDelay": 1000,
  // "files.autoSave": "afterDelay",
  "files.exclude": {
    "**/__pycache__/**": true,
    "**/*.class": true,
    "**/*.pyc": true,
    "**/.git/**": true,
    "**/.vendors/**": true,
    "**/.vendor/**": true,
    "**/node_modules/**": true
  },
  "files.associations": {
    "*.js": "javascriptreact",
    "**/*.html": "html",
    "**/templates/**/*.html": "django-html",
    "**/templates/**/*": "django-txt",
    "**/requirements{/**,*}.{txt,in}": "pip-requirements"
  },
  "files.trimTrailingWhitespace": true,
  "files.defaultLanguage": "markdown",

  "advancedNewFile.exclude": {
    "node_modules": true,
    "node_modules_electron": true,
    "vendors": true,
    "build": true,
    "dist": true
  },
  "advancedNewFile.showInformationMessages": true,
  "advancedNewFile.convenienceOptions": [
    "current"
  ],





  //Explorer
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.visible": 0,
  "breadcrumbs.enabled": true,

  // Terminal
  "terminal.integrated.fontSize": 18,
  "terminal.integrated.rendererType": "dom",
  "terminal.integrated.showExitAlert": false,

  // debug
  "debug.allowBreakpointsEverywhere": true,

  // Telemetry
  "telemetry.enableTelemetry": false,
  "telemetry.enableCrashReporter": false,

  // npm
  "npm.enableScriptExplorer": true,
  "npm.packageManager": "npm",

  // Vim plugin

  "vim.normalModeKeyBindingsNonRecursive": [
    {
      // Save and close tab
      "before": ["z", "z"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.files.save",
          "args": []
        },
        {
          "command": "workbench.action.closeActiveEditor",
          "args": []
        }
      ]
    },
    {
      // copy until last of line
      "before": ["Y"],
      "after": ["y", "$"]
    },
    {
      // add empty line bellow
      "before": ["<leader>", "o"],
      "after": ["o", "<Esc>"]
    },
    {
      // add empty line before
      "before": ["<leader>", "O"],
      "after": ["O", "<Esc>"]
    },
    {
      // show the command palette
      "before": [":"],
      "commands": ["workbench.action.showCommands"]
    },

    {
      // Required https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks
      // Bind `<leader>m` to add a bookmark
      "before": ["<leader>", "m"],
      "commands": ["bookmarks.toggle"]
    },
    {
      // Bind `<leader>b` to open the list of all bookmarks
      "before": ["<leader>", "b"],
      "commands": ["bookmarks.list"]
    },
    {
      // Bind `<leader>w` to save the current file
      "before": ["leader", "w"],
      "commands": ["workbench.action.files.save"]
    },
    // Alternative moving
    {
      "before": [" "],
      "after": ["leader", "leader", "leader", "b", "d", "w"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    },
    {
      "before": ["z", "z"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.files.save",
          "args": []
        },
        {
          "command": "workbench.action.closeActiveEditor",
          "args": []
        }
      ]
    }
  ],
  "vim.foldfix": true,
  "vim.easymotion": true,
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.leader": ",",
  "vim.enableNeovim": true,
  "vim.useCtrlKeys": false,
  "vim.useSystemClipboard": true,
  "vim.disableExtension": false,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-d>": false,
    "<C-f>": false
  },

  "vim.searchHighlightColor": "#515C6A",
  "vim.neovimPath": "/usr/bin/nvim",

  // git
  "git.autorefresh": false,
  "git.alwaysSignOff": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,

  // zen mode. No distraction
  "zenMode.hideTabs": false,
  "zenMode.hideStatusBar": false,

  // Languages
  "go.gopath": "~/.local/golang",
  "java.home": "/usr/lib/jvm/java-8-openjdk",
  "html.format.enable": true,
  "html.format.endWithNewline": true,
  "html.format.preserveNewLines": true,
  "eslint.alwaysShowStatus": true,
  "phpcs.enable": false,
  "cSpell.language": "en,fr",

  // others
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  "color-highlight.markerType": "underline",

  "liveServer.settings.donotShowInfoMsg": true,

  "indentRainbow.colors": [
    "rgba(61,64,16,0.2)",
    "rgba(32,64,32,0.2)",
    "rgba(64,32,64,0.2)",
    "rgba(16,48,48,0.2)"
  ],

  "diffEditor.ignoreTrimWhitespace": true,

  "emmet.triggerExpansionOnTab": false,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "mjml": "html",
    "ejs" : "html",
    "django-html": "html"
  },
  "auto-close-tag.activationOnLanguage": [
    "xml",
    "php",
    "blade",
    "ejs",
    "jinja",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "plaintext",
    "markdown",
    "vue",
    "liquid",
    "erb",
    "lang-cfml",
    "cfml",
    "HTML (Eex)"
  ],

  "indentRainbow.errorColor": "rgba(128,32,32,0.8)",

  // Autocompletion for CSS name
  "html-css-class-completion.includeGlobPattern" : "**/*.{css,scss,html}",
  "html-css-class-completion.enableEmmetSupport" : true,

  "liveServer.settings.donotVerifyTags": true,
  "cSpell.logLevel": "Information",
  "cSpell.diagnosticLevel": "Hint",
  "vsicons.dontShowNewVersionMessage": true,
  "dart.checkForSdkUpdates": false,
  "javascript.updateImportsOnFileMove.enabled": "never",
  "sync.gist": "0895c47d60029b73dc05da461429d4e5",
  "sync.autoDownload": true,
  "sync.autoUpload": true,
  "sync.forceUpload": true,
  "sync.quietSync": true,
  "window.menuBarVisibility": "default",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": false
  },
  "zenMode.fullScreen": false,
  "zenMode.centerLayout": false,
  "zenMode.hideLineNumbers": false,
  "git.enableCommitSigning": true,
  "search.useGlobalIgnoreFiles": true,
  "python.jediEnabled": false,
  "editor.smoothScrolling": true,
  "editor.snippetSuggestions": "top",
  "editor.suggestFontSize": 14,
  "debug.console.fontFamily": "",
  "debug.console.fontSize": 16,
  "debug.inlineValues": true,
  "scm.alwaysShowActions": true,
  "scm.alwaysShowProviders": true,
  "vscode-postgres.defaultConnection": "localhost",
  "vsintellicode.features.python.deepLearning": "enabled",
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "vs-kubernetes": {
    "vs-kubernetes.kubectl-path.linux": "/home/visi/.vs-kubernetes/tools/kubectl/kubectl",
    "vs-kubernetes.minikube-path.linux": "/home/visi/.vs-kubernetes/tools/minikube/linux-amd64/minikube",
    "vs-kubernetes.helm-path.linux": "/home/visi/.vs-kubernetes/tools/helm/linux-amd64/helm",
    "vs-kubernetes.draft-path.linux": "/home/visi/.vs-kubernetes/tools/draft/linux-amd64/draft"
  },
  "workbench.statusBar.visible": true,
  "python.languageServer": "Microsoft",
  "workbench.enableExperiments": false,
  "workbench.colorTheme": "One Dark Pro Flat",
  "workbench.startupEditor": "newUntitledFile",
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "material-icon-theme.showWelcomeMessage": false,
  "workbench.iconTheme": "gruvbox-material-icon-theme",
  "docker.showStartPage": false

}
